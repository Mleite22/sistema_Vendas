unit uCadCliente;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uTelaHeranca, Data.DB,
  ZAbstractRODataset, ZAbstractDataset, ZDataset, Vcl.DBCtrls, Vcl.Grids,
  Vcl.DBGrids, Vcl.StdCtrls, Vcl.Buttons, Vcl.Mask, Vcl.ExtCtrls, Vcl.ComCtrls,
  RxToolEdit, cCadCliente, uEnum;

type
  TfrmCadCliente = class(TfrmTelaHeranca)
    edtcliente_id: TLabeledEdit;
    edtnome: TLabeledEdit;
    edtCEP: TMaskEdit;
    Label1: TLabel;
    edtEndereco: TLabeledEdit;
    edtBairro: TLabeledEdit;
    edtCidade: TLabeledEdit;
    Label2: TLabel;
    Label3: TLabel;
    edtEmail: TLabeledEdit;
    edtData_Nascimento: TDateEdit;
    Label4: TLabel;
    edtTelefone: TMaskEdit;
    qryListagemcliente_id: TIntegerField;
    qryListagemnome: TWideStringField;
    qryListagemendereco: TWideStringField;
    qryListagemcidade: TWideStringField;
    qryListagembairro: TWideStringField;
    qryListagemestado: TWideStringField;
    qryListagemcep: TWideStringField;
    qryListagemtelefone: TWideStringField;
    qryListagememail: TWideStringField;
    qryListagemdata_Nascimento: TDateTimeField;
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnNovoClick(Sender: TObject);
    procedure btnAlterarClick(Sender: TObject);
    procedure dtsListagemDataChange(Sender: TObject; Field: TField);
  private
    { Private declarations }
    oCliente : TCliente;
    function Apagar: Boolean; override;
    function Gravar(EstadoDoCadastro: TEstadoDoCadastro): Boolean; override;
  public
    { Public declarations }
  end;

var
  frmCadCliente: TfrmCadCliente;

implementation

{$R *.dfm}

uses uDTMConexao;



{ TfrmCadCliente }
          {$region'OVERRIDE'}

function TfrmCadCliente.Apagar: Boolean;
begin
  if oCliente.Selecionar(qryListagem.FieldByName('cliente_id').AsInteger) then
  begin
    Result:= oCliente.Apagar;
  end;

end;

function TfrmCadCliente.Gravar(EstadoDoCadastro: TEstadoDoCadastro): Boolean;
begin
   if edtcliente_id.Text <> '' then
    oCliente.codigo:=StrToInt(edtcliente_id.Text)
    else
    oCliente.codigo     :=0;
    oCliente.nome       :=edtnome.Text;
    oCliente.cep        :=edtCEP.Text;
    oCliente.endereco   :=edtEndereco.Text;
    oCliente.bairro     :=edtBairro.Text;
    oCliente.cidade     :=edtCidade.Text;
    oCliente.telefone   :=edtTelefone.Text;
    oCliente.email      :=edtEmail.Text;
    oCliente.data_Nascimento := edtData_Nascimento.Date;
    if (EstadoDoCadastro = ecInserir) then
      Result := oCliente.Gravar
    else if (EstadoDoCadastro=ecInserir) then
         Result:= oCliente.Atualizar;
end;

        {$endregion}


procedure TfrmCadCliente.btnAlterarClick(Sender: TObject);
begin

    if oCliente.Selecionar(qryListagem.FieldByName('cliente_id').AsInteger) then
    begin
      edtcliente_id.Text      := IntToStr(oCliente.codigo);
      edtnome.Text            := oCliente.nome;
      edtCEP.Text             := oCliente.cep;
      edtEndereco.Text        := oCliente.endereco;
      edtBairro.Text          := oCliente.bairro;
      edtCidade.Text          := oCliente.cidade;
      edtTelefone.Text        := oCliente.telefone;
      edtEmail.Text           := oCliente.email;
      edtData_Nascimento.Date := oCliente.data_Nascimento;
    end
    else begin
      btnCancelar.Click;
      Abort;
    end;

  inherited;
end;

                          //Novo
procedure TfrmCadCliente.btnNovoClick(Sender: TObject);
begin
  inherited; //Herdado
  edtData_Nascimento.Date:= Date;
  edtnome.SetFocus;  //focar o curso neste campo
end;

procedure TfrmCadCliente.dtsListagemDataChange(Sender: TObject; Field: TField);
begin
  inherited;

end;

                        //Método CLOSE
procedure TfrmCadCliente.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  inherited;
  if Assigned(oCliente) then
    FreeAndNil(oCliente);
end;

                       //Metodo Criar
procedure TfrmCadCliente.FormCreate(Sender: TObject);
begin
  inherited;
  oCliente:= TCliente.Create(dtmConexao.ConexaoDB);
  IndiceAtual:='nome';
end;
end.
