unit uCadProduto;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uTelaHeranca, Data.DB,
  ZAbstractRODataset, ZAbstractDataset, ZDataset, Vcl.DBCtrls, Vcl.Grids,
  Vcl.DBGrids, Vcl.StdCtrls, Vcl.Buttons, Vcl.Mask, Vcl.ExtCtrls, Vcl.ComCtrls,
  RxToolEdit, RxCurrEdit, cCadProduto, uEnum, uDTMConexao;

type
  TfrmCadProduto = class(TfrmTelaHeranca)
    qryListagemproduto_id: TIntegerField;
    qryListagemnome: TWideStringField;
    qryListagemdescricao: TWideStringField;
    qryListagemvalor: TFloatField;
    qryListagemquantidade: TFloatField;
    qryListagemcategoria_id: TIntegerField;
    qryListagemDescricaoCategoria: TWideStringField;
    edtproduto_id: TLabeledEdit;
    edtnome: TLabeledEdit;
    edtDescricao: TMemo;
    Label1: TLabel;
    edtValor: TCurrencyEdit;
    edtQuantidade: TCurrencyEdit;
    Label2: TLabel;
    Label3: TLabel;
    lkpCategoria: TDBLookupComboBox;
    QryCategoria: TZQuery;
    dtsCategoria: TDataSource;
    QryCategoriacategoria_id: TIntegerField;
    QryCategoriadescricao: TWideStringField;
    procedure btnAlterarClick(Sender: TObject);
    procedure btnNovoClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }

    oProduto : TProduto;
    function Apagar: Boolean; override;
    function Gravar(EstadoDoCadastro: TEstadoDoCadastro): Boolean; override;

  public
    { Public declarations }
  end;

var
  frmCadProduto: TfrmCadProduto;

implementation

{$R *.dfm}

{$region 'OverRid'}

function TfrmCadProduto.Apagar: Boolean;
begin
    if oProduto.Selecionar(qryListagem.FieldByName('produto_id').AsInteger) then
    begin
      Result:= oProduto.Apagar;
    end;

end;

function  TfrmCadProduto.Gravar(EstadoDoCadastro: TEstadoDoCadastro): Boolean;
begin
  if edtproduto_id.Text<>'' then
    oProduto.codigo:= StrToInt(edtproduto_id.Text)
  else
    oProduto.codigo := 0;

    oProduto.nome           :=edtnome.Text;
    oProduto.descricao      :=edtDescricao.Text;
    oProduto.categoria_id   :=lkpCategoria.KeyValue;
    oProduto.valor          :=edtValor.value;
    oProduto.quantidade     :=edtQuantidade.value;

    if (EstadoDoCadastro = ecInserir) then
      Result := oProduto.Gravar
    else if (EstadoDoCadastro=ecAlterado) then
      Result := oProduto.Atualizar;
end;


{$endregion}

procedure TfrmCadProduto.btnAlterarClick(Sender: TObject);
begin
  if oProduto.Selecionar(qryListagem.FieldByName('produto_id').AsInteger) then
  begin
    edtproduto_id.Text    := IntToStr(oProduto.codigo);
    edtnome.Text          :=oProduto.nome;
    edtDescricao.Text     :=oProduto.descricao;
    lkpCategoria.KeyValue :=oProduto.categoria_id;
    edtValor.Value        :=oProduto.valor;
    edtQuantidade.Value   :=oProduto.quantidade;
  end

  else
  begin
    btnCancelar.Click;
    Abort;
  end;
  inherited;

end;

procedure TfrmCadProduto.btnNovoClick(Sender: TObject);
begin
  inherited;
  edtnome.SetFocus;
end;

procedure TfrmCadProduto.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  inherited;
  QryCategoria.Close;
  if Assigned(oProduto) then
    FreeAndNil(oProduto);
end;

procedure TfrmCadProduto.FormCreate(Sender: TObject);
begin
  inherited;
  oProduto:= TProduto.Create(dtmConexao.ConexaoDB);
  IndiceAtual:= 'nome';
end;

procedure TfrmCadProduto.FormShow(Sender: TObject);
begin
  inherited;
   QryCategoria.Open;
end;

end.
